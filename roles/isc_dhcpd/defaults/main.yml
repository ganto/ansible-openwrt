---
# .. Copyright (C) 2021 Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
# .. Copyright (C) 2020 CipherMail B.V. <https://www.ciphermail.com/>
# .. Copyright (C) 2020 Imre Jonk <imre@imrejonk.nl>
# .. Copyright (C) 2014-2018 Maciej Delmanowski <drybjed@gmail.com>
# .. Copyright (C) 2014-2018, 2020 DebOps <https://debops.org/>
# .. SPDX-License-Identifier: GPL-3.0-only

#
# OPKG packages
#

# List of DHCP protocols that will be provided (`DHCPv4` and/or `DHCPv6`).
isc_dhcpd_protocols:
  - 'DHCPv4'
  - 'DHCPv6'

# List of default packages to install for DHCP server support.
isc_dhcpd_default_packages:
  - '{{ "isc-dhcp-server-ipv4" if "DHCPv4" in isc_dhcpd_protocols else [] }}'
  - '{{ "isc-dhcp-server-ipv6" if "DHCPv6" in isc_dhcpd_protocols else [] }}'

# List of additional packages to install with this role.
isc_dhcpd_custom_packages: []

#
# DHCP server configuration
#

# Whether to serve authoritative responses.
isc_dhcpd_authoritative: True

# Syslog facility to use.
# See https://manpages.debian.org/syslog.3#Values_for_facility
isc_dhcpd_log_facility: 'daemon'

# The length in seconds that will be assigned to a lease if the client
# requesting the lease does not ask for a specific expiration time. This is used
# for both DHCPv4 and DHCPv6 leases (it is also known as the "valid lifetime" in
# DHCPv6).
isc_dhcpd_default_lease_time: '{{ 60 * 60 * 12 }}'

# The maximum length in seconds that will be assigned to a lease.
isc_dhcpd_max_lease_time: '{{ 60 * 60 * 24 }}'

# The preferred lifetime of assigned IPv6 addresses in seconds. An IPv6 address
# becomes deprecated when the preferred lifetime expires, causing the OS to no
# longer use it for new outbound connections.
isc_dhcpd_preferred_lifetime: '{{ (isc_dhcpd_default_lease_time | float * (5/8)) | int }}'

# Set T1 (renew) and T2 (rebind) to the values recommended in RFC 3315.
# See https://tools.ietf.org/html/rfc3315#section-22.4
isc_dhcpd_dhcpv6_set_tee_times: True

# Whether to perform DNS updates for clients with static assignments.
isc_dhcpd_update_static_leases: False

# Domain name to advertise to DHCPv4 clients.
isc_dhcpd_domain_name: '{{ ansible_domain }}'

# List of search domains to advertise to DHCPv4 and DHCPv6 clients.
isc_dhcpd_domain_search: '{{ ansible_dns.search | default([]) }}'

# List of IP addresses to advertise as recursive DNS servers. IPv4 addresses
# will only be advertised to DHCPv4 clients, while IPv6 addresses will only be
# advertised to DHCPv6 clients.
isc_dhcpd_name_servers: '{{ ansible_dns.nameservers
                            if ("127.0.0.1" not in ansible_dns.nameservers)
                            else [] }}'

# Additional options to add to the global configuration. This parameter accepts
# two dictionaries with keys 'DHCPv4' and 'DHCPv6', for each protocol
# respectively. The values can be strings or YAML text blocks.
isc_dhcpd_global_options_map:
  'DHCPv4': ''
  'DHCPv6': ''

#
# DHCP server configuration scopes
#

# List of host classes with custom options for each class. Each list item is a
# YAML dictionary supporting the following options:
#
#   name       (required)  Name of the host class
#   comment    (optional)  Comment added in the configuration file
#   options    (optional)  Text block with options for a particular class scope
#   subclasses (optional)  List of subclasses. Each list item should be specified
#                          as a dict, the following keys are recognized:
#
#                            submatch  (required)  A hashed submatch expression
#                            comment   (optional)  Comment added to the configuration
#                                                  file
#                            options   (optional)  Text block with options for a
#                                                  particular subclass scope
# Example:
#
#   isc_dhcpd_classes:
#     - name: 'empty-class'
#     - name: 'allocation-class-2'
#       options: |
#         match pick-first-value (option dhcp-client-identifier, hardware);
#       subclasses:
#         - submatch: '1:8:0:2b:a9:cc:e3'
#         - submatch: '1:08:00:2b:a1:11:31'
#           options: |
#             option root-path "samsara:/var/diskless/alphapc";
#             filename "/tftpboot/netbsd.alphapc-diskless";
#
isc_dhcpd_classes: []

# List of DHCPv4 failover configuration blocks. Each list item is a YAML dictionary
# defining a failover pair consisting of a primary and secondary host. No more than
# two nodes are allowed in an ISC DHCP failover cluster.
#
# You must specify which failover pair each pool should use by listing the name of
# the failover in each pool declaration, for example:
#
#   isc_dhcpd_failovers:
#     - name: 'my-failover'
#       primary: '192.0.2.1'
#       secondary: '192.0.2.2'
#       split: 128
#
#   isc_dhcpd__subnets:
#     - subnet: '192.0.2.0/24'
#       routers: [ '192.0.2.1' ]
#       pools:
#         - comment: 'My pool with failover'
#           failover: 'my-failover'
#           ranges: [ '192.0.2.3 192.0.2.254' ]
#
# Each failover declaration has a set of mandatory fields, which are:
#
#   primary    IPv4 address of the primary DHCP server
#   secondary  IPv4 address of the secondary DHCP server
#   mclt       Max Client Lead Time. This is the maximum amount of time that one
#              server can extend a lease for a DHCP client beyond the time known
#              by the partner server. Default value: 3600
#
# Split configuration between two failover DHCP servers (you must specify one of
# 'split' or 'hba', never both):
#
#   split      Split value between 0 and 255. Specifies the split between the
#              primary and secondary servers for the purpose of load balancing.
#              Whenever a client makes a DHCP request, the DHCP server runs a hash
#              on the client identification, resulting in a value from 0 to 255.
#              This is used as an index into a 256 bit field. If the bit at that
#              index is set, the primary is responsible. If the bit at that index
#              is not set, the secondary is responsible.
#
#   hba        32 character string in the regexp: ([0-9a-f]{2}:){32}. Specifies
#              the split between the primary and secondary as a bitmap rather than
#              a cutoff, which theoretically allows for finer-grained control. In
#              practice however, there is probably no need for such fine-grained
#              control.
#
# You must use either the 'split' or the 'hba' statement. Split has a preference,
# so if it's defined, 'hba' will be omitted by the configuration template.
#
#   max_response_delay     Tells the DHCP server how many seconds may pass without
#                          receiving a message from its failover peer before it
#                          assumes that the connection has failed. Default value: 60
#   max_unacked_updates    Tells the remote DHCP server how many BNDUPD messages
#                          it can send before it receives a BNDACK from the local
#                          system. Default value: 10
#
# Optional fields are mostly described in dhcpd.conf(5):
#
#   load_balance_max_seconds   A cutoff after which load balancing is disabled.
#                              Default value: 5
#   auto_partner_down      Number of seconds to wait after a communications
#                          failure until the server starts allocating leases
#                          from the partner's free lease pool. This feature is
#                          disabled by default.
#   max_lease_misbalance   Configures the percentage of allowed misbalance between
#                          the failover pools. If the "Leases to Send" value
#                          exceeds this percentage, the leases are moved to the
#                          other server. Default value: 15
#   max_lease_ownership    Percentage that defines the lower boundary of the
#                          allowed misbalance. This value should be lower than
#                          the value selected in max_lease_misbalance. Default
#                          value: 10
#   min_balance            Minimum number of seconds to wait before rebalancing.
#                          Default value: 60
#   max_balance            Maximum number of seconds to wait before rebalancing.
#                          Default value: 3600
#
# The role specifies additional templating options:
#
#   comment    A comment to add in the configuration file.
#   options    Text block containing custom options for this failover configuration.
#
isc_dhcpd_failovers: []

# Global list of static hosts. Each list item is a YAML dictionary defining a host
# with a static lease assignment. The following options are supported:
#
#   hostname   (required)                       The hostname
#   ethernet   (required if `address4` is set)  MAC address of this host
#   address4   (optional)                       IPv4 address of this host
#   address6   (optional)                       IPv6 address of this host
#   comment    (optional)                       A comment added in the configuration
#                                               file
#   options    (optional)                       Text block containing custom options
#                                               for this host
# Example:
#
#   isc_dhcpd_hosts:
#     - hostname: 'ncd1'
#       address4: '192.0.2.3'
#       address6: '2001:db8::3'
#       ethernet: '00:c0:c3:49:2b:57'
#
isc_dhcpd_hosts: []

# List of shared networks to service with this DHCP server. Each list item is a
# YAML dictionary supporting the following options:
#
#   name       (required)  Name of the shared network
#   subnets    (required)  List of subnets included in this shared network. Use
#                          the same format as the `isc_dhcpd_subnets` list.
#   comment    (optional)  A comment added in the configuration file
#   options    (optional)  Text block containing custom options for this shared
#                          network.
#
# Example:
#
#   isc_dhcpd_shared_networks:
#     - name: 'shared-net'
#       comment: 'Local shared network'
#       options: |
#         default-lease-time 600;
#         max-lease-time 900;
#       subnets:
#         - subnet: '192.0.2.0/24'
#           routers: [ '192.0.2.1' ]
#
#         - subnet: '198.51.100.0/24'
#           routers: [ '198.51.100.1', '198.51.100.2' ]
#           options: |
#             default-lease-time 300;
#             max-lease-time 7200;
#           pools:
#             - comment: "A pool in a subnet"
#               ranges: [ '198.51.100.3 198.51.100.254' ]
#
isc_dhcpd_shared_networks: []

# List of subnets that are not part of a shared network, but are instead defined
# on a global level. Each list item is a YAML dictionary defining a subnet. The
# following options are supported:
#
#   subnet     (required)  The subnet, in CIDR notation (e.g. 192.0.2.0/24 or
#                          2001:db8::/64)
#   comment    (optional)  A comment added in the configuration file
#   options    (optional)  Text block containing custom options for this subnet
#   routers    (optional)  List of IP addresses of the routers for this subnet. This
#                          option is not applicable to IPv6 subnets as NDP is used
#                          there to discover the routers.
#   ranges     (optional)  List of address ranges for dynamic lease assignment. The format
#                          of each range item is '<first address><space><last address>'
#                          for both IPv4 and IPv6, but you can use CIDR notation for IPv6
#                          as well.
#   pools      (optional)  List of address pools within the subnet. Each pool must be
#                          specified as a dict, the following keys are recognized:
#
#                            comment   A comment added in the configuration file
#                            options   Text block containing custom options for this pool
#                            ranges    List of address ranges for dynamic lease assignment.
#                                      See comment above about range item format.
# Example:
#
#   isc_dhcpd_subnets:
#     - subnet: '192.0.2.0/24'
#       comment: 'Example IPv4 subnet'
#       pools:
#         - comment: 'Reserved for static assignments'
#           options: |
#             deny unknown-clients;
#           ranges: [ '192.0.2.2 192.0.2.49' ]
#
#         - comment: 'Pool for dynamic clients'
#           ranges: [ '192.0.2.50 192.0.2.254' ]
#
#     - subnet: '2001:db8::/64'
#       comment: 'Example IPv6 subnet'
#       pools:
#         - ranges:
#             - '2001:db8::1:0 2001:db8::1:ffff'
#             - '2001:db8::2:0/112'
#
isc_dhcpd_subnets: '{{ isc_dhcpd_default_subnets }}'

# The default subnets as detected by this role. Dynamic lease assignment will
# not work until you configure subnets with valid address ranges.
isc_dhcpd_default_subnets:

  - comment: 'Default IPv4 subnet'
    subnet: '{{ (ansible_facts.uci.network.interface.lan.ipaddr | ipaddr("network")) + "/" +
                ((ansible_facts.uci.network.interface.lan.ipaddr + "/" +
                  ansible_facts.uci.network.interface.lan.netmask)
                 | ipaddr("prefix") | string)
                if "lan" in ansible_facts.uci.network.interface.keys()
                else (ansible_default_ipv4.network + "/" + ansible_default_ipv4.netmask) }}'
    routers: [ '{{ ansible_facts.uci.network.interface.lan.ipaddr
                   if "lan" in ansible_facts.uci.network.interface.keys()
                   else ansible_default_ipv4.gateway | default() }}' ]
    state: '{{ "present" if "DHCPv4" in isc_dhcpd_protocols else "absent" }}'
