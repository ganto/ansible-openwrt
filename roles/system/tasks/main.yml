---
# Copyright (C) 2021 Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Include tasks to check for uncommitted system changes
  include_tasks: check_changes.yml
  when: system_abort_uncommitted|bool

- name: Gather UCI system facts
  check_mode: no
  ganto.openwrt.uci_facts:
    config: system

- name: Configure hostname
  ganto.openwrt.uci:
    command: set
    config: system
    section: '@system[0]'
    option: hostname
    value: '{{ system_hostname }}'
  notify: 'Commit UCI system changes'

- name: Query timezone information from zonename
  check_mode: no
  changed_when: no
  command: >
    lua -e
    "require('luci.sys.zoneinfo')
    for _, zone in ipairs(luci.sys.zoneinfo.TZ) do
      if zone[1] == '{{ system_zonename | regex_replace('_', ' ') }}' then
        print(zone[2])
      end
    end"
  register: system_register_timezone

- name: Set timezone and zonename
  ganto.openwrt.uci:
    command: set
    config: system
    section: '@system[0]'
    option: '{{ item.key }}'
    value:
      # must be passed as list item to prevent Ansible from parsing the value
      # to individual list items when it contains ','
      - '{{ item.value }}'
  with_dict:
    zonename: '{{ system_zonename }}'
    timezone: '{{ system_register_timezone.stdout_lines[0]
                  if (system_register_timezone.stdout_lines | length > 0)
                  else "UTC" }}'
  loop_control:
    label: '{{ (item.key + ": " + item.value) | to_json }}'
  notify: 'Commit UCI system changes'

- name: Configure UCI system options
  ganto.openwrt.uci:
    command: set
    config: system
    section: '@system[0]'
    option: '{{ item.key }}'
    value: '{{ item.value | ganto.openwrt.uci_type }}'
  loop: '{{ system_options | dict2items }}'
  loop_control:
    label: '{{ (item.key + ": "
                + (item.value | ganto.openwrt.uci_type | string))
               | to_json }}'
  notify: 'Commit UCI system changes'

- name: Manage UCI system NTP section
  ganto.openwrt.uci:
    command: set
    config: system
    section: ntp
    value: timeserver
  notify: 'Commit UCI system changes'

- name: Enable or disable NTP client
  ganto.openwrt.uci:
    command: set
    config: system
    section: ntp
    option: enabled
    value: '{{ system_ntp_enabled | ganto.openwrt.uci_type }}'
  notify: 'Commit UCI system changes'

- name: Configure NTP client
  ganto.openwrt.uci:
    command: '{{ "set" if (system_ntp_enabled | bool)
                       else "delete" }}'
    config: system
    section: ntp
    option: '{{ item.key }}'
    value: '{{ item.value | ganto.openwrt.uci_type }}'
  with_dict:
    enable_server: '{{ system_ntp_daemon | ganto.openwrt.uci_type }}'
    server: '{{ system_ntp_servers }}'
    use_dhcp: '{{ system_ntp_use_dhcp | ganto.openwrt.uci_type }}'
  loop_control:
    label: '{{ (item.key + ": "
                +  (item.value | ganto.openwrt.uci_type | string))
               | to_json }}'
  notify: 'Commit UCI system changes'

- name: Trigger handlers
  meta: flush_handlers

- name: Restart system service
  service:
    name: system
    enabled: true
    state: restarted
  when:
    - (system_register_uci_commit | default({})) is changed  # noqa no-handler
    - system_service_restart | bool

- name: Restart sysntpd service
  service:
    name: sysntpd
    enabled: '{{ true if (system_ntp_enabled | bool) else false }}'
    state: '{{ "stopped"
               if (not system_ntp_enabled | bool)
               else ("restarted"
                     if ((system_register_uci_commit | default({})) is changed)
                     else "started") }}'

- name: Restart log service
  service:
    name: log
    enabled: true
    state: restarted
  when:
    - (system_register_uci_commit | default({})) is changed  # noqa no-handler
    - system_log_restart | bool
