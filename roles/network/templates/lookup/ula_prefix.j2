{#
 # Copyright (C) 2021 Reto Gantenbein <reto.gantenbein>
 # SPDX-License-Identifier: GPL-3.0-or-later
 #
 # This lookup template will check the Ansible facts for existing IPv6 gateway
 # addresses in the fd00::/8 ULA range. If one is found the ULA prefix is
 # constructed from the prefix found. Otherwise a random new ULA prefix is
 # generated.
 #}
{% set _hex_chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', 'a', 'b', 'c', 'd', 'e', 'f'] %}
{% set _ula_blocks = [] %}
{% for _ip6addr in (ansible_all_ipv6_addresses | default([])) %}
  {# Only match addresses in the ULA range #}
  {% if (_ip6addr | regex_search('^fd')) and (_ula_blocks | length == 0) %}
    {# Check if it's the gateway address #}
    {% if _ip6addr.split(':')[-1] == '1' %}
      {# Use the /48 prefix as ULA prefix #}
      {% for _block in _ip6addr.split(':')[0:3] %}
        {% set _ = _ula_blocks.append(_block.zfill(4)) %}
      {% endfor %}
    {% endif %}
  {% endif %}
{% endfor %}
{% if (_ula_blocks | length == 0) %}
  {# Calling random in a loop returned the same value for each iteration
     therefore this verbose approach #}
  {% set _ = _ula_blocks.append('fd' + (_hex_chars | random) + (_hex_chars | random)) %}
  {% set _ = _ula_blocks.append((_hex_chars | random) + (_hex_chars | random) + (_hex_chars | random) + (_hex_chars | random)) %}
  {% set _ = _ula_blocks.append((_hex_chars | random) + (_hex_chars | random) + (_hex_chars | random) + (_hex_chars | random)) %}
{% endif %}
{{ _ula_blocks | join(':') }}::/48
