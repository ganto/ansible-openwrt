---
# Copyright (C) 2021 Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Include tasks to check for uncommitted network changes
  include_tasks: check_changes.yml
  when: network_abort_uncommitted|bool

- name: Gather UCI network facts
  check_mode: no
  ganto.openwrt.uci_facts:
    config: network

- name: Manage UCI network globals section
  ganto.openwrt.uci:
    command: '{{ "set" if (network_globals_config | length > 0)
                       else "delete" }}'
    config: network
    section: globals
    value: globals
  when: ((network_globals_config | length > 0) and
         ('network.globals' not in ansible_facts.uci.keys())) or
        (network_globals_config | length == 0)
  notify: 'Commit UCI network changes'

- name: Set UCI network globals options
  # the globals section might not exist yet when running in check mode
  ignore_errors: '{{ ansible_check_mode }}'
  ganto.openwrt.uci:
    command: set
    config: network
    section: globals
    option: '{{ item.key }}'
    value: '{{ item.value }}'
  loop: '{{ network_globals_config | dict2items }}'
  loop_control:
    label: '{{ item.key }}'
  notify: 'Commit UCI network changes'

- name: Include tasks to configure network interface
  include_tasks: interface.yml
  loop: '{{ network_combined_interfaces | dict2items }}'
  loop_control:
    label: '{{ network_include_interface.key }}'
    loop_var: network_include_interface

- name: Trigger handlers
  meta: flush_handlers

- name: Restart network
  service:
    name: network
    state: restarted
  when:
    - network_restart | bool
    - (network_register_uci_commit | default({})) is changed
  register: network_register_restart

- name: Wait for network to come up again
  delegate_to: '{{ network_check_delegate_to }}'
  wait_for:
    host: '{{ ansible_host }}'
    port: '{{ ansible_port | default(22) }}'
    search_regex: 'SSH-2.0'
    timeout: 30
  when: network_register_restart is changed
